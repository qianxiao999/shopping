package com.neuedu.dao;

import com.neuedu.pojo.Cart;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;
@Mapper
public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Cart record);
    //根据productId和userid查询购物信息
    Cart selectCartByUseridAndProductId(@Param("userId")Integer userId,
                                        @Param("productId")Integer productId);
    //根据userid查询用户的购物车信息
    List<Cart> selectCartByUserid(@Param("userId")Integer userId);
    //判断用户购物信息是否全选
    //@return>0说明为全选
    int isCheckedAll(Integer userId);
    ////移除购物车中的某个/某些商品
    int deleteByUseridAndProductIds(@Param("userId") Integer userId,
                                    @Param("productIdList") List<Integer> productIdList);
    //操作购物车是否选中某个商品
    /**@param userId
     * @param productId
     * @param check 1:选中 0：未选中
     * */
    int selectOrUnselectProduct(@Param("userId")Integer userId,
                                @Param("productId")Integer productId,
                                @Param("check")Integer check);

    //查询购物车中产品的数量
    //统计用户购物车的数量
    int get_cart_product_count(Integer userId);
    /**
     * 查询购物车中用户已选中的商品
     * @param userId
     *
     * */
    List<Cart> findCartListByUserIdAndChecked(Integer userId);
    //批量删除购物车商品
    int batchDelete(List<Cart> cartList);


}